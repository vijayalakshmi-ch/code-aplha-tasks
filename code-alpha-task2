App Code (React Native)
a) Install Dependencies
npm install react-native-share axios
b) App Structure (React Native Navigation)
import React, { useState, useEffect } from 'react';
import { View, Text, Button, StyleSheet, ActivityIndicator } from 'react-native';
import axios from 'axios';
import Share from 'react-native-share';

const App = () => {
  const [quote, setQuote] = useState('');
  const [author, setAuthor] = useState('');
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetchQuote();
  }, []);

  const fetchQuote = async () => {
    setLoading(true);
    try {
      const response = await axios.get('https://api.quotable.io/random');
      setQuote(response.data.content);
      setAuthor(response.data.author);
      setLoading(false);
    } catch (error) {
      console.error(error);
      setLoading(false);
    }
  };

  const shareQuote = () => {
    const shareOptions = {
      message: `${quote} - ${author}`,
    };
    Share.open(shareOptions).catch(err => console.error(err));
  };

  return (
    <View style={styles.container}>
      {loading ? (
        <ActivityIndicator size="large" color="#0000ff" />
      ) : (
        <>
          <Text style={styles.quoteText}>“{quote}”</Text>
          <Text style={styles.authorText}>- {author}</Text>
          <Button title="Get New Quote" onPress={fetchQuote} />
          <Button title="Share Quote" onPress={shareQuote} />
        </>
      )}
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    padding: 20,
  },
  quoteText: {
    fontSize: 24,
    fontStyle: 'italic',
    textAlign: 'center',
    marginBottom: 20,
  },
  authorText: {
    fontSize: 20,
    textAlign: 'center',
    marginBottom: 40,
  },
});

export default App;
Features Breakdown
a) Fetching Quotes Using Axios
const fetchQuote = async () => {
  setLoading(true);
  try {
    const response = await axios.get('https://api.quotable.io/random');
    setQuote(response.data.content);
    setAuthor(response.data.author);
    setLoading(false);
  } catch (error) {
    console.error(error);
    setLoading(false);
  }
};
Displaying the Quote and Author
<Text style={styles.quoteText}>“{quote}”</Text>
<Text style={styles.authorText}>- {author}</Text>
c) Loading Indicator
{loading ? (
  <ActivityIndicator size="large" color="#0000ff" />
) : (
  // Quote content
)}
d) Sharing Quotes via Social Media
const shareQuote = () => {
  const shareOptions = {
    message: `${quote} - ${author}`,
  };
  Share.open(shareOptions).catch(err => console.error(err));
};
4. External API (Quote API)
{
  "_id": "XgldS4WHsk",
  "content": "The only limit to our realization of tomorrow is our doubts of today.",
  "author": "Franklin D. Roosevelt"
}
5. Sharing on Social Media
const shareOptions = {
  message: `${quote} - ${author}`,
};
